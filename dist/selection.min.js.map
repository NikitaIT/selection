{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/SelectionFrame.ts","webpack:///./src/selection.ts"],"names":[],"mappings":"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","file":"selection.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selection\"] = factory();\n\telse\n\t\troot[\"Selection\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-disable prefer-rest-params */\r\nimport { IntersectsMode } from './IntersectsMode';\r\n\r\nfunction eventListener<T extends HTMLCollection | NodeList | HTMLElement[]>(method: any, elements: T, events: MouseEvent[], fn: any, options: any = {}) {\r\n    const normalizedEvents = normalizeArray(events);\r\n    const normalizedElements = normalizeDomArray(elements);\r\n    for (const element of normalizedElements) {\r\n        for (const event of normalizedEvents) {\r\n            (element as any)[method](event, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\nfunction normalizeDomArray(elements: HTMLCollection | NodeList | HTMLElement[]) {\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        return Array.from(elements);\r\n    }\r\n    return normalizeArray(elements);\r\n}\r\nfunction normalizeArray<T>(elements: T | T[]): T[] {\r\n    if (!Array.isArray(elements)) {\r\n        return [elements];\r\n    }\r\n    return elements;\r\n}\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nexport const unitify = <T extends CSSStyleDeclarationWithNumber[keyof CSSStyleDeclarationWithNumber]>(val: T, unit = 'px') => typeof val === 'number' ? val + unit : val;\r\n\r\ntype CSSStyleDeclarationWithNumber = {\r\n    [P in keyof CSSStyleDeclaration]?: CSSStyleDeclaration[P] | number;\r\n};\r\n/**\r\n * Add css to a DOM-Element or returns the current\r\n * value of a property.\r\n *\r\n * @param el The Element.\r\n * @param attr The attribute or a object which holds css key-properties.\r\n * @param val The value for a single attribute.\r\n * @returns {*}\r\n */\r\nexport function css<T extends keyof CSSStyleDeclarationWithNumber>(el: ElementCSSInlineStyle, attr: T, val: CSSStyleDeclarationWithNumber[T]): void;\r\nexport function css(el: ElementCSSInlineStyle, attr: CSSStyleDeclarationWithNumber): void;\r\nexport function css<T extends keyof CSSStyleDeclarationWithNumber>(el: ElementCSSInlineStyle, attr: T | CSSStyleDeclarationWithNumber, val?: CSSStyleDeclarationWithNumber[T]): void {\r\n    const style = el && el.style;\r\n    if (style) {\r\n        if (typeof attr === 'object') {\r\n\r\n            for (const [key, value] of Object.entries(attr)) {\r\n                style[key as any] = unitify(value);\r\n            }\r\n\r\n        } else if (val && typeof attr === 'string') {\r\n            style[attr as any] = unitify(val);\r\n        }\r\n    }\r\n}\r\n\r\nexport type BoundingClientRect = ClientRect | DOMRect;\r\n/**\r\n * Check if two DOM-Elements intersects each other.\r\n * @param a BoundingClientRect of the first element.\r\n * @param b BoundingClientRect of the second element.\r\n * @param mode Options are center, cover or touch.\r\n * @returns {boolean} If both elements intersects each other.\r\n */\r\nexport function intersects(a: BoundingClientRect, b: BoundingClientRect, mode?: IntersectsMode) {\r\n    switch (mode || IntersectsMode.touch) {\r\n        case IntersectsMode.center: {\r\n            const bxc = b.left + b.width / 2;\r\n            const byc = b.top + b.height / 2;\r\n\r\n            return bxc >= a.left\r\n                && bxc <= a.right\r\n                && byc >= a.top\r\n                && byc <= a.bottom;\r\n        }\r\n        case IntersectsMode.cover: {\r\n            return b.left >= a.left\r\n                && b.top >= a.top\r\n                && b.right <= a.right\r\n                && b.bottom <= a.bottom;\r\n        }\r\n        case IntersectsMode.touch: {\r\n            return a.right >= b.left\r\n                && a.left <= b.right\r\n                && a.bottom >= b.top\r\n                && a.top <= b.bottom;\r\n        }\r\n        default: {\r\n            throw new Error(`Unkown intersection mode: ${mode}`);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Takes a selector (or array of selectors) and returns the matched nodes.\r\n * @param selector The selector or an Array of selectors.\r\n * @returns {Array} Array of DOM-Nodes.\r\n */\r\nexport function selectAll(selector: string | HTMLElement | Array<string | HTMLElement>, doc: Document = document): (HTMLElement)[] {\r\n    if (!Array.isArray(selector)) {\r\n        selector = [selector];\r\n    }\r\n\r\n    return selector.flatMap(item => {\r\n        if (typeof item === 'string') {\r\n            return Array.from(doc.querySelectorAll(item));\r\n        } else if (item instanceof (doc.defaultView as any).HTMLElement) {\r\n            return item;\r\n        }\r\n    });\r\n}\r\ntype MouseEventMaybePath = MouseEvent & {\r\n    path?: HTMLElement[];\r\n}\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt: MouseEventMaybePath) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n\r\n    if (path) {\r\n        return path;\r\n    }\r\n\r\n    let el = evt.target;\r\n    for (path = [el]; (el = (el as HTMLElement).parentElement);) {\r\n        path.push(el);\r\n    }\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Removes an element from an Array.\r\n */\r\nexport function removeElement<T>(arr: T[], el: T) {\r\n    const index = arr.indexOf(el);\r\n\r\n    if (~index) {\r\n        arr.splice(index, 1);\r\n    }\r\n}\r\n\r\nexport function simplifyEvent(evt: MouseEvent | TouchEvent) {\r\n    const tap = ((evt as TouchEvent).touches && (evt as TouchEvent).touches[0] || evt);\r\n    return {\r\n        tap,\r\n        x: (tap as MouseEvent).clientX,\r\n        y: (tap as MouseEvent).clientY,\r\n        target: (tap.target as HTMLElement)\r\n    };\r\n}\r\n","import { css } from './utils';\r\n\r\nexport type SelectionFrame = { area: HTMLElement, clippingElement: HTMLElement };\r\n\r\nexport function createSelectionFrame(frame: Document): SelectionFrame {\r\n  const area = frame.createElement('div');\r\n  const clippingElement = frame.createElement('div');\r\n  clippingElement.appendChild(area);\r\n  return { area, clippingElement };\r\n}\r\nexport function applyBasicStylesToTheSelectionFrame(selectionFrame: SelectionFrame) {\r\n  css(selectionFrame.area, {\r\n    willChange: 'top, left, bottom, right, width, height',\r\n    top: 0,\r\n    left: 0,\r\n    position: 'fixed'\r\n  });\r\n\r\n  css(selectionFrame.clippingElement, {\r\n    overflow: 'hidden',\r\n    position: 'fixed',\r\n    transform: 'translate3d(0, 0, 0)', // https://stackoverflow.com/a/38268846\r\n    pointerEvents: 'none',\r\n    zIndex: '1'\r\n  });\r\n}","import { IntersectsMode } from './IntersectsMode';\r\nimport { applyBasicStylesToTheSelectionFrame, createSelectionFrame, SelectionFrame } from './SelectionFrame';\r\nimport { BoundingClientRect, css, eventPath, intersects, off, on, removeElement, selectAll, simplifyEvent, unitify } from './utils';\r\n// @ts-ignore\r\n//import {version} from '../package';\r\n\r\n// Some var shorting for better compression and readability\r\nconst {abs, max, min, round, ceil, sign} = Math;\r\nconst preventDefault = (e: Event) => e.preventDefault();\r\n\r\ntype KeepSelectionStore = {\r\n    _stored: (HTMLElement)[],\r\n    _selectables: (HTMLElement)[],\r\n    _selected: (HTMLElement)[], // Currently touched elements\r\n    _changed: {\r\n        added: (HTMLElement)[],  // Added elements since last selection\r\n        removed: (HTMLElement)[] // Removed elements since last selection\r\n    },\r\n};\r\n\r\nfunction getKeepSelectionStore(): KeepSelectionStore {\r\n    return {\r\n        _stored: [],\r\n        _selectables: [],\r\n        _selected: [], // Currently touched elements\r\n        _changed: {\r\n            added: [],  // Added elements since last selection\r\n            removed: [] // Removed elements since last selection\r\n        },\r\n    };\r\n}\r\n\r\ntype EvenlistenerStore = {\r\n        beforestart: any[],\r\n        start: any[],\r\n        move: any[],\r\n        stop: any[]\r\n};\r\n\r\n// Evenlistener name: [callbacks]\r\nfunction getEvenlistenerStore(): EvenlistenerStore {\r\n    return {\r\n            beforestart: [],\r\n            start: [],\r\n            move: [],\r\n            stop: []\r\n        }\r\n}\r\nexport const enum TapMode {\r\n    native = 'native',\r\n    touch = 'touch'\r\n}\r\ntype Point = { x: number, y: number };\r\nfunction isPoint(startThreshold: number | Point): startThreshold is Point {\r\n    return typeof startThreshold === 'object';\r\n}\r\ntype SelectionOptions = {\r\n    class: string,\r\n    frame: Document,\r\n    mode: IntersectsMode,\r\n    tapMode: TapMode,\r\n    startThreshold: number | Point,\r\n    singleClick: boolean,\r\n    disableTouch: boolean,\r\n\r\n    selectables: any[],\r\n    scrollSpeedDivider: number,\r\n    manualScrollSpeed: number,\r\n\r\n    startareas: string[],\r\n    boundaries: string[],\r\n    selectionAreaContainer: string,\r\n};\r\ntype Boundery = Element | HTMLElement\r\ntype SelectionData = {\r\n    options: SelectionOptions\r\n    _eventListener: EvenlistenerStore,\r\n    selectionFrame: SelectionFrame,\r\n\r\n    // Create area element\r\n    _areaDomRect: BoundingClientRect | null, // Caches the position of the selection-area\r\n    _boundaries: Boundery[];\r\n    _targetContainer: Boundery | undefined;\r\n    _targetBoundary: DOMRect;\r\n    _singleClick: boolean;\r\n    // Is getting set on movement. Varied.\r\n    _scrollAvailable: boolean,\r\n    _scrollSpeed: {x: number | null, y: number | null},\r\n    _init(): void;\r\n    _bindStartEvents(type: 'on' | 'off'): void;\r\n    _onTapStart(evt: MouseEvent): void;\r\n    _onSingleTap(evt: MouseEvent): boolean;\r\n    _delayedTapMove(evt: MouseEvent): void;\r\n    __delayedTapMove(evt: MouseEvent): void;\r\n    _onTapMove(evt: MouseEvent): void;\r\n    _manualScroll(evt: WheelEvent): void;\r\n    _redrawArea(): void;\r\n    _onTapStop(evt: MouseEvent, noevent?: boolean): void;\r\n    _updatedTouchingElements(): void;\r\n    _emit(event: keyof EvenlistenerStore, evt: MouseEvent): boolean;\r\n    on(event: keyof EvenlistenerStore, cb: any): SelectionData;\r\n    off(event: keyof EvenlistenerStore, cb: any): SelectionData;\r\n    resolveSelectables(): void;\r\n    keepSelection(): void;\r\n    clearSelection(store: boolean): void;\r\n    removeFromSelection(el: HTMLElement): void;\r\n    getSelection(): HTMLElement[];\r\n    cancel(keepEvent: boolean): void;\r\n    option<T extends keyof SelectionOptions>(name: T, value?: SelectionOptions[T]): SelectionOptions[T];\r\n    disable(): void;\r\n    destroy(): void;\r\n    enable(): void;\r\n    select(query: string | HTMLElement | (string | HTMLElement)[]): HTMLElement[];\r\n} & KeepSelectionStore;\r\nfunction Selection(options: Partial<SelectionOptions> = {}) {\r\n    const areaStartPoint = {\r\n        _ax1: 0,\r\n        _ay1: 0,\r\n    };\r\n    const areaEndPoint = {\r\n        _ax2: 0,\r\n        _ay2: 0,\r\n    };\r\n    const that: SelectionData = {\r\n        // >- новые?\r\n        _boundaries: [],\r\n        _targetContainer: undefined,\r\n        _targetBoundary: undefined as any,\r\n        _singleClick: false,\r\n        selectionFrame: null as any as SelectionFrame,\r\n        // <- новые?\r\n        options: {\r\n            class: 'selection-area',\r\n            frame: document,\r\n            mode: IntersectsMode.touch,\r\n            tapMode: TapMode.native,\r\n            startThreshold: 10,\r\n            singleClick: true,\r\n            disableTouch: false,\r\n\r\n            selectables: [],\r\n            scrollSpeedDivider: 10,\r\n            manualScrollSpeed: 750,\r\n\r\n            startareas: ['html'],\r\n            boundaries: ['html'],\r\n            selectionAreaContainer: 'body',\r\n            ...options\r\n        },\r\n        ...getKeepSelectionStore(),\r\n\r\n        _eventListener: getEvenlistenerStore(),\r\n\r\n        // Create area element\r\n        _areaDomRect: null, // Caches the position of the selection-area\r\n\r\n        // Is getting set on movement. Varied.\r\n        _scrollAvailable: true,\r\n        _scrollSpeed: {x: null, y: null},\r\n\r\n        _init(): void {\r\n            const {frame} = that.options;\r\n            that.selectionFrame = createSelectionFrame(frame);\r\n            that.selectionFrame.area.classList.add(that.options.class);\r\n            applyBasicStylesToTheSelectionFrame(that.selectionFrame);\r\n            that.enable();\r\n        },\r\n\r\n        _bindStartEvents(type: 'on' | 'off'): void {\r\n            const {frame} = that.options;\r\n            const fn = type === 'on' ? on : off;\r\n            fn(frame, 'mousedown', that._onTapStart);\r\n\r\n            if (!that.options.disableTouch) {\r\n                fn(frame, 'touchstart', that._onTapStart, {\r\n                    passive: false\r\n                });\r\n            }\r\n        },\r\n\r\n        _onTapStart(evt: MouseEvent): void {\r\n            const {x, y, target} = simplifyEvent(evt);\r\n            const {startareas, boundaries, frame} = that.options;\r\n            const targetBoundingClientRect = target.getBoundingClientRect();\r\n\r\n            // Find start-areas and boundaries\r\n            const startAreas = selectAll(startareas, frame);\r\n            that._boundaries = selectAll(boundaries, frame);\r\n\r\n            // Check in which container the user currently acts\r\n            that._targetContainer = that._boundaries.find(el =>\r\n                intersects(el.getBoundingClientRect(), targetBoundingClientRect)\r\n            );\r\n\r\n            function isAreaStartsInOneOfTheStartAreasOrBoundaries() {\r\n                const evtpath = eventPath(evt);\r\n                return !that._targetContainer ||\r\n                !startAreas.find(el => evtpath.includes(el)) ||\r\n                !that._boundaries.find(el => evtpath.includes(el));\r\n            }\r\n            if (isAreaStartsInOneOfTheStartAreasOrBoundaries()) {\r\n                return;\r\n            }\r\n            // мб тут нужно больши инфы передать?\r\n            if (that._emit('beforestart', evt) === false) {\r\n                return;\r\n            }\r\n\r\n            // Area start point\r\n            areaStartPoint._ax1 = x;\r\n            areaStartPoint._ay1 = y;\r\n\r\n            // Area end point\r\n            areaEndPoint._ax2 = 0;\r\n            areaEndPoint._ay2 = 0;\r\n\r\n            // To detect single-click\r\n            that._singleClick = true;\r\n            that.clearSelection(false);\r\n\r\n            // Prevent default select event (firefox bug-fix)\r\n            on(frame, 'selectstart', preventDefault);\r\n\r\n            // Add listener\r\n            on(frame, ['touchmove', 'mousemove'], that._delayedTapMove, {passive: false});\r\n            on(frame, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\r\n\r\n            // Firefox will scroll down the page which would break the selection.\r\n            evt.preventDefault();\r\n        },\r\n\r\n        _onSingleTap(evt: MouseEvent): boolean {\r\n            const {tapMode} = that.options;\r\n            const spl = simplifyEvent(evt);\r\n            let target: HTMLElement | null = null;\r\n\r\n            if (tapMode === TapMode.native) {\r\n                target = spl.target;\r\n            } else if (tapMode ===  TapMode.touch) {\r\n                that.resolveSelectables();\r\n\r\n                const {x, y} = spl;\r\n                target = that._selectables.find(v => {\r\n                    const {right, left, top, bottom} = v.getBoundingClientRect();\r\n                    return x < right && x > left && y < bottom && y > top;\r\n                });\r\n            } else {\r\n                throw new Error(`Unknown tapMode option: ${tapMode}`);\r\n            }\r\n\r\n            if (!target) {\r\n                return false;\r\n            }\r\n\r\n            /**\r\n             * Resolve selectables again.\r\n             * If the user starded in a scrollable area they will be reduced\r\n             * to the current area. Prevent the exclusion of these if a range-selection\r\n             * gets performed.\r\n             */\r\n            that.resolveSelectables();\r\n\r\n            // Traverse dom upwards to check if target is selectable\r\n            while (!that._selectables.includes(target)) {\r\n                if (!target.parentElement) {\r\n                    return;\r\n                }\r\n\r\n                target = target.parentElement;\r\n            }\r\n\r\n            that._emit('start', evt);\r\n            const stored = that._stored;\r\n            if (evt.shiftKey && stored.length) {\r\n                const reference = stored[stored.length - 1];\r\n\r\n                // Resolve correct range\r\n                const [preceding, following] = reference.compareDocumentPosition(target) & Node.DOCUMENT_POSITION_FOLLOWING\r\n                  ? [target, reference]\r\n                  : [reference, target];\r\n\r\n                const rangeItems = [...that._selectables.filter(el =>\r\n                    (el.compareDocumentPosition(preceding) & Node.DOCUMENT_POSITION_FOLLOWING) &&\r\n                    (el.compareDocumentPosition(following) & Node.DOCUMENT_POSITION_PRECEDING)\r\n                ), target];\r\n\r\n                that.select(rangeItems);\r\n                that._emit('move', evt);\r\n                that._emit('stop', evt);\r\n            } else {\r\n\r\n                if (stored.includes(target)) {\r\n                    that.removeFromSelection(target);\r\n                } else {\r\n                    that.select(target);\r\n                }\r\n\r\n                that._emit('move', evt);\r\n                that._emit('stop', evt);\r\n            }\r\n        },\r\n\r\n        _delayedTapMove(evt: MouseEvent): void {\r\n\r\n            // Check pixel threshold\r\n            function isMoreWhenThreshold() {\r\n                const { startThreshold } = that.options;\r\n                const {x, y} = simplifyEvent(evt);\r\n                const {_ax1, _ay1} = areaStartPoint; // Coordinates of first \"tap\"\r\n                return (typeof startThreshold === 'number' && abs((x + y) - (_ax1 + _ay1)) >= startThreshold) ||\r\n                  (isPoint(startThreshold) && (abs(x - _ax1) >= startThreshold.x || abs(y - _ay1) >= startThreshold.y));\r\n            }\r\n            if (isMoreWhenThreshold()) {\r\n                that.__delayedTapMove(evt);\r\n            }\r\n\r\n            evt.preventDefault(); // Prevent swipe-down refresh\r\n        },\r\n\r\n        __delayedTapMove(evt: MouseEvent): void {\r\n            const { frame } = that.options;\r\n            off(frame, ['mousemove', 'touchmove'], that._delayedTapMove, {passive: false});\r\n            on(frame, ['mousemove', 'touchmove'], that._onTapMove, {passive: false});\r\n\r\n            // Make area element visible\r\n            css(that.selectionFrame.area, 'display', 'block');\r\n\r\n            // Apppend selection-area to the dom\r\n            selectAll(that.options.selectionAreaContainer, frame)[0].appendChild(that.selectionFrame.clippingElement);\r\n\r\n            // Now after the threshold is reached resolve all selectables\r\n            that.resolveSelectables();\r\n\r\n            // An action is recognized as single-select until the user performed a mutli-selection\r\n            that._singleClick = false;\r\n\r\n            // Just saving the boundaries of this container for later\r\n            const tb = that._targetBoundary = that._targetContainer.getBoundingClientRect();\r\n\r\n            // Find container and check if it's scrollable\r\n            // Indenticates if the user is currently in a scrollable area\r\n            that._scrollAvailable = round(that._targetContainer.scrollHeight) !== round(tb.height) ||\r\n              round(that._targetContainer.scrollWidth) !== round(tb.width);\r\n            if (that._scrollAvailable) {\r\n                // Detect mouse scrolling\r\n                on(window, 'wheel', that._manualScroll, {passive: false});\r\n\r\n                /**\r\n                 * The selection-area will also cover other element which are\r\n                 * out of the current scrollable parent. So find all elements\r\n                 * which are in the current scrollable element. Later these are\r\n                 * the only selectables instead of all.\r\n                 */\r\n                that._selectables = that._selectables.filter(s => that._targetContainer.contains(s));\r\n\r\n                /**\r\n                 * To clip the area, the selection area has a parent\r\n                 * which has exact the same dimensions as the scrollable elemeent.\r\n                 * Now if the area exeeds these boundaries it will be cropped.\r\n                 */\r\n                css(that.selectionFrame.clippingElement, {\r\n                    top: tb.top,\r\n                    left: tb.left,\r\n                    width: tb.width,\r\n                    height: tb.height\r\n                });\r\n\r\n                /**\r\n                 * The area element is relative to the clipping element,\r\n                 * but when this is moved or transformed we need to correct\r\n                 * the positions via a negative margin.\r\n                 */\r\n                css(that.selectionFrame.area, {\r\n                    marginTop: -tb.top,\r\n                    marginLeft: -tb.left\r\n                });\r\n            } else {\r\n                /**\r\n                 * Reset margin and clipping element dimensions.\r\n                 */\r\n                css(that.selectionFrame.clippingElement, {\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%'\r\n                });\r\n\r\n                css(that.selectionFrame.area, {\r\n                    marginTop: 0,\r\n                    marginLeft: 0\r\n                });\r\n            }\r\n\r\n            // Trigger recalc and fire event\r\n            that._onTapMove(evt);\r\n            that._emit('start', evt);\r\n        },\r\n        _onTapMove(evt: MouseEvent): void {\r\n            const {x, y} = simplifyEvent(evt);\r\n            const {scrollSpeedDivider} = that.options;\r\n            const scon = that._targetContainer;\r\n            let ss = that._scrollSpeed;\r\n            areaEndPoint._ax2 = x;\r\n            areaEndPoint._ay2 = y;\r\n\r\n            if (that._scrollAvailable && (ss.y !== null || ss.x !== null)) {\r\n\r\n                // Continous scrolling\r\n                requestAnimationFrame(function scroll() {\r\n\r\n                    // Make sure that ss is not outdated\r\n                    ss = that._scrollSpeed;\r\n                    const scrollY = ss.y !== null;\r\n                    const scrollX = ss.x !== null;\r\n\r\n                    // Scrolling is not anymore required\r\n                    if (!scrollY && !scrollX) {\r\n                        return;\r\n                    }\r\n\r\n                    /**\r\n                     * If the value exeeds the scrollable area it will\r\n                     * be set to the max / min value. So change only\r\n                     */\r\n                    const {scrollTop, scrollLeft} = scon;\r\n\r\n                    // Reduce velocity, use ceil in both directions to scroll at least 1px per frame\r\n                    if (scrollY) {\r\n                        scon.scrollTop += ceil(ss.y / scrollSpeedDivider);\r\n                        areaStartPoint._ay1 -= scon.scrollTop - scrollTop;\r\n                    }\r\n\r\n                    if (scrollX) {\r\n                        scon.scrollLeft += ceil(ss.x / scrollSpeedDivider);\r\n                        areaStartPoint._ax1 -= scon.scrollLeft - scrollLeft;\r\n                    }\r\n\r\n                    /**\r\n                     * We changed the start coordinates -> redraw the selectiona area\r\n                     * We changed the dimensions of the area element -> re-calc selected elements\r\n                     * The selected elements array has been changed -> fire event\r\n                     */\r\n                    redraw();\r\n\r\n                    // Keep scrolling even if the user stops to move his pointer\r\n                    requestAnimationFrame(scroll);\r\n                });\r\n            } else {\r\n\r\n                /**\r\n                 * Perform redraw only if scrolling is not active.\r\n                 * If scrolling is active this area is getting re-dragwed by the scroll function.\r\n                 */\r\n                redraw();\r\n            }\r\n\r\n            function redraw() {\r\n                that._redrawArea();\r\n                that._updatedTouchingElements();\r\n                that._emit('move', evt);\r\n            }\r\n\r\n            evt.preventDefault(); // Prevent swipe-down refresh\r\n        },\r\n\r\n        _manualScroll(evt: WheelEvent): void {\r\n            const {manualScrollSpeed} = that.options;\r\n\r\n            // Consistent scrolling speed on all browsers\r\n            that._scrollSpeed.y += sign(evt.deltaY) * manualScrollSpeed;\r\n            that._scrollSpeed.x += sign(evt.deltaX) * manualScrollSpeed;\r\n            that._onTapMove(evt);\r\n\r\n            // Prevent defaul scrolling behaviour, eg. page scrolling\r\n            evt.preventDefault();\r\n        },\r\n\r\n        _redrawArea(): void {\r\n            const ss = that._scrollSpeed;\r\n            const {scrollTop, scrollHeight, clientHeight, scrollLeft, scrollWidth, clientWidth} = that._targetContainer;\r\n            const brect = that._targetBoundary;\r\n            let x = areaEndPoint._ax2;\r\n            let y = areaEndPoint._ay2;\r\n            [ss.x, x] = scrollSpeedWithNewCoord(x, brect.left, brect.width, scrollWidth, scrollLeft, clientWidth);\r\n            [ss.y, y] = scrollSpeedWithNewCoord(y, brect.top, brect.height, scrollHeight, scrollTop, clientHeight);\r\n\r\n\r\n            const x3 = min(areaStartPoint._ax1, x);\r\n            const y3 = min(areaStartPoint._ay1, y);\r\n            const x4 = max(areaStartPoint._ax1, x);\r\n            const y4 = max(areaStartPoint._ay1, y);\r\n            const width = x4 - x3;\r\n            const height = y4 - y3;\r\n\r\n            // It's generally faster to not use es6-templates\r\n            Object.assign(that.selectionFrame.area.style, {\r\n                transform: `translate3d(${unitify(x3)}, ${unitify(y3)}` + ', 0)',\r\n                width: unitify(width),\r\n                height: unitify(height)\r\n            });\r\n            that._areaDomRect = new DOMRect(x3, y3, width, height);\r\n        },\r\n\r\n        _onTapStop(evt: MouseEvent, noevent?: boolean): void {\r\n            const {frame, singleClick} = that.options;\r\n\r\n            // Remove event handlers\r\n            off(frame, ['mousemove', 'touchmove'], that._delayedTapMove);\r\n            off(frame, ['touchmove', 'mousemove'], that._onTapMove);\r\n            off(frame, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\r\n\r\n            if (evt && that._singleClick && singleClick) {\r\n                that._onSingleTap(evt);\r\n            } else if (!that._singleClick && !noevent) {\r\n                that._updatedTouchingElements();\r\n                that._emit('stop', evt);\r\n            }\r\n\r\n            // Reset scroll speed\r\n            that._scrollSpeed = {x: null, y: null};\r\n\r\n            // Unbind mouse scrolling listener\r\n            off(window, 'wheel', that._manualScroll);\r\n\r\n            // Remove selection-area from dom\r\n            that.selectionFrame.clippingElement.remove();\r\n\r\n            // Enable default select event\r\n            off(frame, 'selectstart', preventDefault);\r\n            css(that.selectionFrame.area, 'display', 'none');\r\n        },\r\n\r\n        _updatedTouchingElements(): void {\r\n            const {_selected, _selectables, options, _areaDomRect} = that;\r\n            const {mode} = options;\r\n            function isAreaIntersectsElement(node: Element | HTMLElement) {\r\n                return intersects(_areaDomRect, node.getBoundingClientRect(), mode)\r\n            }\r\n            const touched = _selectables.filter(isAreaIntersectsElement);\r\n            const added = touched.filter((node) => !_selected.includes(node));\r\n            // Check which elements where removed since last selection\r\n            const removed = _selected.filter(el => !touched.includes(el));\r\n            // Save\r\n            that._selected = touched;\r\n            that._changed = {added, removed};\r\n        },\r\n\r\n        _emit(event: keyof EvenlistenerStore, evt: MouseEvent): boolean {\r\n            // isOk?\r\n            return that._eventListener[event].reduce((ok, listener) => {\r\n                return listener.call(that, {\r\n                    inst: that,\r\n                    area: that.selectionFrame.area,\r\n                    selected: that._selected.concat(that._stored),\r\n                    changed: that._changed,\r\n                    oe: evt\r\n                }) && ok;\r\n            }, true);\r\n        },\r\n\r\n        /**\r\n         * Adds an eventlistener\r\n         * @param event\r\n         * @param cb\r\n         */\r\n        on(event: keyof EvenlistenerStore, cb: any): SelectionData {\r\n            that._eventListener[event].push(cb);\r\n            return that;\r\n        },\r\n\r\n        /**\r\n         * Removes an event listener\r\n         * @param event\r\n         * @param cb\r\n         */\r\n        off(event: keyof EvenlistenerStore, cb: any): SelectionData {\r\n            const callBacks = that._eventListener[event];\r\n\r\n            if (callBacks) {\r\n                const index = callBacks.indexOf(cb);\r\n\r\n                if (~index) {\r\n                    callBacks.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            return that;\r\n        },\r\n\r\n        /**\r\n         * Can be used if during a selection elements have been added.\r\n         * Will update everything which can be selected.\r\n         */\r\n        resolveSelectables(): void {\r\n\r\n            // Resolve selectors\r\n            that._selectables = selectAll(that.options.selectables, that.options.frame);\r\n        },\r\n\r\n        /**\r\n         * Saves the current selection for the next selecion.\r\n         * Allows multiple selections.\r\n         */\r\n        keepSelection(): void {\r\n            const {_selected, _stored} = that;\r\n            // _stored это Set\r\n            for (let i = 0; i < _selected.length; i++) {\r\n                const el = _selected[i];\r\n                if (!_stored.includes(el)) {\r\n                    _stored.push(el);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear the elements which where saved by 'keepSelection()'.\r\n         * @param store If the store should also get cleared\r\n         */\r\n        clearSelection(store: boolean = true): void {\r\n            store && (that._stored = []);\r\n            that._selected = [];\r\n            that._changed.added = [];\r\n            that._changed.removed = [];\r\n        },\r\n\r\n        /**\r\n         * Removes an particular element from the selection.\r\n         */\r\n        removeFromSelection(el: HTMLElement): void {\r\n            that._changed.removed.push(el);\r\n            removeElement(that._stored, el);\r\n            removeElement(that._selected, el);\r\n        },\r\n\r\n        /**\r\n         * @returns {Array} Selected elements\r\n         */\r\n        getSelection(): HTMLElement[] {\r\n            return that._stored;\r\n        },\r\n\r\n        /**\r\n         * Cancel the current selection process.\r\n         * @param keepEvent {boolean} true to fire the onStop listener after cancel.\r\n         */\r\n        cancel(keepEvent: boolean = false): void {\r\n            that._onTapStop(null, !keepEvent);\r\n        },\r\n\r\n        /**\r\n         * Set or get an option.\r\n         * @param   {string} name\r\n         * @param   {*}      value\r\n         * @return  {*}      the new value\r\n         */\r\n        option<T extends keyof SelectionOptions>(name: T, value?: SelectionOptions[T]): SelectionOptions[T] {\r\n            const {options} = that;\r\n            return value === undefined ? options[name] : (options[name] = value);\r\n        },\r\n\r\n        /**\r\n         * Disable the selection functinality.\r\n         */\r\n        disable(): void {\r\n            that._bindStartEvents('off');\r\n        },\r\n\r\n        /**\r\n         * Unbinds all events and removes the area-element\r\n         */\r\n        destroy(): void {\r\n            that.disable();\r\n            that.selectionFrame.clippingElement.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the selection functinality.\r\n         */\r\n        enable(): void {\r\n            that._bindStartEvents('on');\r\n        },\r\n\r\n        /**\r\n         * Manually select elements\r\n         * @param query - CSS Query, can be an array of queries\r\n         */\r\n        select(query: string | HTMLElement | (string | HTMLElement)[]): HTMLElement[] {\r\n            const {_selected, _stored, options} = that;\r\n            const elements = selectAll(query, options.frame).filter(el =>\r\n                !_selected.includes(el) &&\r\n                !_stored.includes(el)\r\n            );\r\n\r\n            that._selected.push(...elements);\r\n            that._changed.added.push(...elements);\r\n            return elements;\r\n        }\r\n    };\r\n\r\n    // Initialize\r\n    that._init();\r\n\r\n    return that;\r\n}\r\nfunction scrollSpeedWithNewCoord(\r\n  coord: number,\r\n  directionCoord: number,\r\n  length: number,\r\n  scrollLength: number,\r\n  scrollDirectionCoord: number,\r\n  clientLength: number\r\n) {\r\n    if (coord < directionCoord) {\r\n        return [\r\n            scrollDirectionCoord ? -abs(directionCoord - coord) : null,\r\n            directionCoord\r\n        ];\r\n    } else {\r\n        const alternateDirectionCoord = directionCoord + length;\r\n        if (coord > alternateDirectionCoord) {\r\n            return [\r\n                (scrollLength - scrollDirectionCoord - clientLength ? abs(alternateDirectionCoord - coord) : null),\r\n                alternateDirectionCoord\r\n            ];\r\n        }\r\n    }\r\n    return [null, coord];\r\n}\r\n\r\n// Export utils\r\nSelection.utils = {\r\n    on,\r\n    off,\r\n    css,\r\n    intersects,\r\n    selectAll,\r\n    eventPath,\r\n    removeElement\r\n};\r\n\r\n/**\r\n * Create selection instance\r\n * @param {Object} [options]\r\n */\r\nSelection.create = (options: Partial<SelectionOptions>) => Selection(options);\r\n\r\n// Set version and export\r\n// Selection.version = version;\r\nexport default Selection;\r\n"],"sourceRoot":""}